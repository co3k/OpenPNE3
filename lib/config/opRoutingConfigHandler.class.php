<?php

/**
 * This file is part of the OpenPNE package.
 * (c) OpenPNE Project (http://www.openpne.jp/)
 *
 * For the full copyright and license information, please view the LICENSE
 * file and the NOTICE file that were distributed with this source code.
 */

/**
 * opRoutingConfigHandler
 *
 * @package    OpenPNE
 * @subpackage config
 * @author     Kousuke Ebihara <ebihara@tejimaya.com>
 * @author     Rimpei Ogawa <ogawa@tejimaya.com>
 */
class opRoutingConfigHandler extends sfRoutingConfigHandler
{
  protected function parse($configFiles)
  {
    $result = parent::parse($configFiles);

    $name = 'symfony_default_routes';
    $options = array(
      'name'  => $name,
    );

    $result[$name] = array('opSymfonyDefaultRouteCollection', array($options));

   return $result;
  }

  public function execute($configFiles)
  {
    $options = $this->getOptions();
    unset($options['cache']);

    $data = array();
    foreach ($this->parse($configFiles) as $name => $routeConfig)
    {
      $r = new ReflectionClass($routeConfig[0]);
      $route = $r->newInstanceArgs($routeConfig[1]);

      $routes = $route instanceof sfRouteCollection ? $route : array($name => $route);
      foreach (sfPatternRouting::flattenRoutes($routes) as $name => $route)
      {
        $route->setDefaultOptions($options);

        $route->compile();

        // defaultOptions are not used after compiling route
        $route->setDefaultOptions(array());

        $args = unserialize($route->serialize());
        $prefix = $args[4];

        $data[] = sprintf('\'%s\' => array(%s, %s)', $name, var_export($prefix, true), var_export(serialize($route), true));
      }
    }

    return sprintf("<?php\n".
                   "// auto-generated by opRoutingConfigHandler\n".
                   "// date: %s\n\$this->routes = array(\n  %s\n);\n",
                   date('Y/m/d H:i:s'), implode(",\n  ", $data)
    );
  }
}
